WEBVTT

00:00.120 --> 00:06.120
All right, guys, we talked about the flow control, how much the receiver can handle and how much

00:06.120 --> 00:07.440
the sender can send.

00:08.330 --> 00:13.130
But now we have to talk about the congestion control, how much the network can handle, how much the

00:13.130 --> 00:18.230
middle box is in the middle that my IP, my beautiful IP packets pass through.

00:19.010 --> 00:23.780
How much can it handle and how fast can I send the data?

00:24.170 --> 00:27.890
Because we we we agreed we cannot send a segment and wait.

00:27.920 --> 00:28.930
That's just dumb.

00:28.940 --> 00:33.060
No, because I said in sentiment, I take the hit of latency.

00:33.110 --> 00:40.190
So if I can send a lot of stuff and take the hit once, I'll be better off because I rather send you

00:40.190 --> 00:47.480
as much as there as you can handle and as the network can handle, such that we can increase the flow

00:47.480 --> 00:48.530
of the data.

00:48.530 --> 00:55.880
And you can get all this data once and I take the head of the roundtrip once instead of multiple times.

00:56.150 --> 00:59.390
That's the congestion control, how much the network can handle.

00:59.510 --> 01:00.470
Let's jump into it.

01:01.160 --> 01:02.000
I'm going to disappear.

01:02.030 --> 01:03.020
Congestion control.

01:03.020 --> 01:07.700
The receiver might handle the load, but the middle boxes might not.

01:08.120 --> 01:12.530
We're going to take an example that others in the middle have limit, just like any other machine.

01:12.710 --> 01:18.710
Think of all this as the flow control of the routers, if you want, and that will pan nicely.

01:18.710 --> 01:22.670
If you if you think about it, we don't want to congest the network with data.

01:23.060 --> 01:24.710
We need to avoid congestion.

01:25.040 --> 01:26.140
It's a new window.

01:26.150 --> 01:28.430
It's called the congestion window.

01:28.430 --> 01:34.640
And this is a property of the sender because the sender is responsible for congestion.

01:34.970 --> 01:36.140
And this is an example here.

01:36.140 --> 01:43.030
So we're be we have the flow control window and the router is the here's how much buffer they can handle.

01:43.040 --> 01:46.820
So if you skip sending a lot of data, the routers might drop it.

01:47.240 --> 01:51.080
And when they drop it, you might need to retransmission.

01:51.110 --> 01:53.480
You might do lot a lot of retransmission.

01:53.990 --> 01:56.970
And that will decrease the performance of your network.

01:56.990 --> 01:58.970
There are two congestion control algorithm.

01:58.970 --> 02:03.680
One that starts the beginning is called TCP slow start, if you heard about it.

02:03.680 --> 02:08.510
And then once that takes over, it's called congestion avoidance.

02:09.500 --> 02:13.250
That that that kicks in after slow start is finished.

02:13.280 --> 02:13.880
Right.

02:13.910 --> 02:14.840
Second example.

02:14.840 --> 02:22.670
So what is slow start slow start is actually the funny thing is like slow start actually is faster than

02:22.670 --> 02:23.840
congestion avoidance.

02:23.840 --> 02:31.070
So it's really odd but it starts slow and here's where our works, your CW and DE, which is the congestion

02:31.070 --> 02:31.670
window.

02:32.640 --> 02:33.280
You.

02:33.900 --> 02:39.210
It increases with one maximum segment size after each acknowledgment.

02:39.330 --> 02:45.810
With every acknowledgment that we get, we increase one RMS one, RMS one, RMS one of us.

02:45.810 --> 02:49.590
You're effectively so you're keeping increasing one one maximum segment size.

02:49.590 --> 02:54.480
So maximum physical size can be what, 1460 bytes.

02:54.480 --> 02:56.160
So all in bytes at the end of the day, right?

02:56.160 --> 03:05.670
So you can increase an increase and increase or congestion can go up until what you cannot obviously

03:05.670 --> 03:09.870
exceed the receiver on the right receiver window.

03:09.870 --> 03:16.080
We established receiver will handle a lot up to one gbps some receivers will handle, but will your

03:16.080 --> 03:18.570
window congestion window can handle up to one gbps.

03:18.840 --> 03:20.130
I really doubt it.

03:20.130 --> 03:20.520
Right.

03:20.520 --> 03:23.850
Your networks in the middle will die, right?

03:23.970 --> 03:31.590
So you send one RMS after each ACH for every single acknowledgement, right?

03:31.590 --> 03:37.260
If you send a segment right and you receive an acknowledgement, that's an additional one.

03:37.260 --> 03:43.920
RMS On your conversion window, if you send if you if you got another acknowledgement, add another

03:43.920 --> 03:50.670
acknowledgement, add, but congestion avoidance, once the slow start finishes, this is what kicks

03:50.670 --> 03:50.790
in.

03:50.790 --> 03:51.780
And here's what you add.

03:51.780 --> 04:01.740
You add a slower you add the number of the the the congestion window is actually becomes linear here

04:01.740 --> 04:10.410
becomes exponential and here becomes linear and you only add one RMS after a complete roundtrip time.

04:10.410 --> 04:15.180
So if you send like five segments, you know that you send five segments, right?

04:15.540 --> 04:18.660
You got to wait for the five to be acknowledged.

04:18.660 --> 04:23.160
So let's say you acknowledge number two and then number three and finally acknowledge five.

04:23.190 --> 04:25.530
That's one round trip, right?

04:25.650 --> 04:31.410
So the whole one round trip effectively will increase by one, which is way slower, right?

04:31.980 --> 04:39.420
So effectively what's happening here is you're increasing exponentially and then increasing linearly.

04:39.420 --> 04:40.770
We're going to show that in a minute.

04:40.770 --> 04:42.990
So slow start and the congestion avoidance.

04:42.990 --> 04:43.440
Right.

04:43.440 --> 04:46.470
And the goal here is like how how large can this be?

04:46.470 --> 04:47.010
Right.

04:48.490 --> 04:49.630
Let's take an example.

04:49.660 --> 04:56.320
Slow start, conduction windows start with one mass, or sometimes more like Cloudflare, for instance.

04:56.320 --> 05:00.510
The cloud provider sets them as to be really large, right?

05:00.540 --> 05:07.630
The current conduction window just so that you start faster because they know you can they you can handle

05:07.720 --> 05:09.340
they can handle your traffic.

05:09.940 --> 05:13.990
So send you send one one segment and wait for an ACH.

05:13.990 --> 05:15.050
What's OC?

05:15.310 --> 05:17.410
This is my current window congestion window.

05:17.440 --> 05:23.170
Let's send one segment and they just wait the month you get an economical for that segment, you add

05:23.170 --> 05:24.430
one, right?

05:24.430 --> 05:28.270
You add another segment which is you added a maximum segment size.

05:28.270 --> 05:31.240
But for simplicity here I'm showing it as segments.

05:31.240 --> 05:40.180
So now your CW and your conjunction Windows two and you send those two puppies two and three, and now

05:40.180 --> 05:44.020
let's say I receive two and I receive three.

05:44.740 --> 05:48.340
Usually you get to receive one technology, but I'm exaggerating here now.

05:48.340 --> 05:55.510
So those you get acknowledgement to enclosure three, we first add one for first acknowledgement and

05:55.510 --> 05:59.140
then add another one, right for the second approach.

05:59.170 --> 06:00.850
So we added two here.

06:01.210 --> 06:05.860
So now look at that, we exponentially increase that.

06:05.860 --> 06:12.340
So with every segment, with every acknowledgement, we're getting almost doubled the number of segments,

06:12.340 --> 06:12.520
right?

06:12.550 --> 06:13.210
It depends.

06:13.990 --> 06:20.470
If if the if this if the receiver decide to wait and send me one acknowledgement, I'm not going to

06:20.470 --> 06:21.010
get two.

06:21.010 --> 06:22.390
But you get the idea, right?

06:22.390 --> 06:25.030
This is just a simplicity sake.

06:25.210 --> 06:29.110
So now we have this is my kind of my congestion window is four.

06:29.110 --> 06:31.030
So I'm just sending four.

06:31.060 --> 06:35.680
So you can see I'm increasing very fast, although I don't know why it's called slow start.

06:35.680 --> 06:36.220
Right.

06:37.090 --> 06:41.560
The key here with each acknowledgement, that's the algorithm.

06:41.560 --> 06:46.360
And it took me a while to read and understand that right through the ref.

06:46.360 --> 06:49.690
See, it's with every acknowledgement.

06:51.170 --> 06:56.300
Right received you increment by one MSAs or one one maximum segment.

06:56.300 --> 07:00.740
Sorry so you can send to more write each acknowledgement.

07:01.460 --> 07:03.140
We're going to see the congestion avoiding.

07:03.140 --> 07:05.480
We increment only with one roundtrip.

07:05.480 --> 07:07.490
So in the case this is one roundtrip.

07:07.520 --> 07:10.250
This is one roundtrip and this is one roundtrip, right?

07:10.250 --> 07:17.740
The one router was like how much data you sent and then that that can that, that, that determines

07:17.750 --> 07:18.470
a roundtrip.

07:18.560 --> 07:23.840
And roundtrip is you send seven packets, seven segments.

07:23.840 --> 07:27.740
At the same time you have to wait for the whole seven segment to be acknowledged.

07:28.220 --> 07:32.090
Even if you receive one acknowledgement for the seventh one, that's one roundtrip, as long as all

07:32.090 --> 07:33.230
of them are acknowledged.

07:33.590 --> 07:36.680
So until we reach slow start threshold.

07:36.680 --> 07:41.750
So there is another threshold that I mention here, which is the threshold of the congestion control

07:41.750 --> 07:48.410
that says, okay, this is my threshold that that you reach, that the congestion window reach that

07:48.410 --> 07:48.980
threshold.

07:49.010 --> 07:50.600
You switch that algorithm.

07:50.600 --> 07:51.590
What's the next one?

07:51.590 --> 07:52.790
That's the next algorithm.

07:54.170 --> 07:59.530
What do you do is that you send the congestion control worth of segments and wait for an ACH.

07:59.540 --> 08:02.300
So again, let's start from one for simplicity here.

08:02.300 --> 08:06.620
Maybe it's going to be more than that, but for example, six here.

08:08.340 --> 08:09.210
We sent one.

08:09.300 --> 08:11.190
You get an acknowledgement ad one.

08:11.280 --> 08:13.350
Now it's two you send to.

08:14.210 --> 08:16.760
You get you get an acknowledgement.

08:17.150 --> 08:18.680
You get to acknowledgement.

08:19.010 --> 08:19.880
But guess what?

08:20.420 --> 08:21.290
I don't care.

08:22.680 --> 08:23.280
You.

08:23.280 --> 08:25.590
This was my round trip I sent to.

08:26.610 --> 08:31.890
I got even if I got to acknowledgement, you get one that's that because that's one roundtrip.

08:31.890 --> 08:38.340
So for each one roundtrip, the whole thing, you get one MSAs and that's it.

08:38.940 --> 08:44.400
So even if you send note, if the four or five six, I send it and I get acknowledgement six.

08:44.900 --> 08:50.280
All right, I'm going to get one only when all the segments are act add up to one MSA.

08:50.280 --> 08:53.430
So it's very it's much, much slower.

08:53.430 --> 08:54.630
It's actually linear.

08:54.630 --> 08:59.070
If you think about it versus a slow start, the more accurate.

08:59.070 --> 09:05.910
If you get a lot of X with every single any act, you get that it will just increase, increase, increasing

09:05.910 --> 09:06.000
it.

09:06.000 --> 09:09.570
So this is it doesn't go by the number of acts.

09:09.580 --> 09:11.310
It goes by the roundtrip itself, right?

09:11.370 --> 09:12.600
Oh, it's certainly two, three.

09:13.110 --> 09:18.690
Hey, I consider this roundtrip done when you send me the ACH for two and three.

09:18.690 --> 09:20.400
And you did send me your accounts.

09:20.880 --> 09:21.540
Yeah, sure.

09:21.540 --> 09:22.740
But this is one roundtrip.

09:22.740 --> 09:26.280
I know you sent me to the acknowledgment, but it's the same thing even here.

09:26.280 --> 09:26.700
Four or five.

09:26.700 --> 09:34.800
Six, if you send me ach four ach 5xx, this is one roundtrip so I'm going to increase one in slow start

09:34.830 --> 09:40.830
if you send ach for ach 5x6, this is plus one plus one plus one.

09:40.830 --> 09:44.400
So you add three to the congestion control.

09:44.670 --> 09:45.480
Wow.

09:45.480 --> 09:49.500
You know, so this is the algorithm actually it's not exactly.

09:49.500 --> 09:56.970
Plus one is actually this is the algorithm, you know, it's a conduction conduction plus the MSAs over

09:56.970 --> 09:59.400
the congestion control window times.

09:59.400 --> 10:04.590
RMS So this is always going to be a fraction for sure, right?

10:04.980 --> 10:09.360
And this times this so it barely hits one.

10:09.360 --> 10:10.530
It's less than one.

10:10.530 --> 10:12.180
Mostly it's less than one.

10:12.600 --> 10:13.000
Right?

10:13.620 --> 10:17.820
It was only going to be one of the if the S is equal to the congestion window.

10:17.820 --> 10:20.550
But the congestion window is definitely going to be greater than RMS.

10:20.550 --> 10:24.120
So this is going to be a fraction and a fraction is down anything.

10:24.150 --> 10:26.680
It's going to be lower than the RMS, right?

10:26.700 --> 10:28.470
So it's slower than once.

10:28.470 --> 10:31.710
No one identical is definitely less than one.

10:31.710 --> 10:37.100
So it's almost like a fraction that it's actually if you think about it, it goes slower.

10:37.110 --> 10:38.640
Here's something we talked about.

10:39.030 --> 10:40.200
Congestion is a fixation.

10:40.200 --> 10:41.130
Remember that, guys.

10:42.300 --> 10:46.680
So we don't want routers to drop packets when they hit congestion.

10:46.680 --> 10:54.540
Can they let us know that, hey, I'm about to drop this, but I'm not going to drop it because I'm

10:54.540 --> 10:55.890
about to hit congestion.

10:55.890 --> 11:01.500
But I'm going to let you know, this is the explicit congestion notification that we talked about.

11:01.500 --> 11:07.410
So in the IP because that's the routers can see it's only these layer three.

11:08.040 --> 11:14.040
Right did that rhyme that's the router can see it only can see layer three.

11:14.040 --> 11:17.160
Oh my gosh that rhymed now I'm awesome man.

11:17.340 --> 11:20.520
So meet ECN explicit congestion notification.

11:20.520 --> 11:24.450
So in the layer three IP packet, the router will set the bit.

11:24.450 --> 11:29.100
This is easy and this is an explicit congestion certification.

11:29.250 --> 11:33.960
You go and let your sender know and I'm going to let you know right now.

11:34.380 --> 11:41.550
So now routers and mailboxes can tag IP packets with ECN and the receiver will copy this bit back to

11:41.550 --> 11:42.360
the sender.

11:42.540 --> 11:46.500
And a saying is an IP header that we talked about that.

11:46.500 --> 11:46.890
Right.

11:46.890 --> 11:53.190
So routers don't drop the packet, just let me know you're reaching your limit so that once you set

11:53.190 --> 12:00.780
that bit, all the algorithm can kick in as is oh, someone is about to get congestion.

12:00.780 --> 12:03.570
Let me half the congestion window.

12:03.930 --> 12:04.380
Right.

12:04.380 --> 12:06.630
And that's what will happen with the moment you have it.

12:06.870 --> 12:08.430
There is another bit that we talked about.

12:08.430 --> 12:17.040
The CW reduce the CW are congestion, window reduction, so we just reduce this window.

12:17.040 --> 12:19.560
So you let the receiver know.

12:19.560 --> 12:22.890
So yeah, summary, summary, summary, summary.

12:23.370 --> 12:27.450
While the receiver may handle large data, middle boxes might not.

12:27.480 --> 12:29.850
And so that's what congestion is all about.

12:29.940 --> 12:37.410
Middle routers buffer my Philip because at the end of the day to process data, you need a buffer,

12:37.410 --> 12:39.630
you need a specific memory, right?

12:39.630 --> 12:41.370
And you can assign it infinity.

12:41.370 --> 12:50.280
I mean you whatever you can handle of the router that the grade eight routers will be just doing that

12:50.280 --> 12:52.500
routing is not going to do anything else.

12:52.500 --> 12:57.510
So they probably assign 16 gigabytes or maybe more.

12:57.510 --> 12:58.200
Why not?

12:59.010 --> 13:00.900
Let's add more, more way more ram.

13:00.900 --> 13:03.690
But now they want this much ram.

13:03.720 --> 13:06.060
You need CPU, right?

13:06.060 --> 13:09.750
That equivalent to process all this stuff in your memory.

13:09.750 --> 13:12.960
So you have to beef up the routers as much as possible.

13:12.960 --> 13:14.010
So how much can you handle?

13:14.010 --> 13:20.220
That's another great stuff that I frankly I don't know anything about, but routers and the quality

13:20.220 --> 13:23.310
of a router, that's another discussion, to be honest.

13:23.310 --> 13:23.760
Right.

13:23.940 --> 13:25.860
So you need to control the congestion of the network.

13:25.940 --> 13:26.780
So we agree about that.

13:26.780 --> 13:27.260
Right?

13:27.950 --> 13:34.040
Then this will allow us to send a lot of data and obviously it's controlled and restricted by the flow.

13:34.070 --> 13:36.930
How much your the receiver can handle.

13:36.950 --> 13:38.240
But it's still good, right?

13:38.270 --> 13:45.470
The sender can send segments up to CW and D, which is the congestion window or the receiver window

13:45.470 --> 13:46.820
without acknowledgement.

13:46.820 --> 13:52.820
And the whole thing is the whole power is this how much can I send without acknowledgement?

13:53.450 --> 13:53.990
Right.

13:54.530 --> 13:57.500
Because if you send something on, you need to wait for acknowledgement.

13:57.500 --> 14:03.140
You you talk ahead on the latency, the distance between you and the destination.

14:03.730 --> 14:03.930
Right.

14:03.980 --> 14:11.900
So you want to send data as much as possible, but without waiting for acknowledgement.

14:11.900 --> 14:13.400
That's the power here.

14:13.550 --> 14:13.910
Right.

14:13.910 --> 14:18.200
Because if you can't wait to send send annoyance and in a way that kind of defeats the purpose because

14:18.200 --> 14:19.190
it's going to be slow.

14:19.880 --> 14:27.980
This is normally not normally not a problem in host the crew through land because if you have land and

14:28.970 --> 14:33.860
you probably have ten gigabit or 100 gigabit and you don't have that limit.

14:33.860 --> 14:38.270
Right, unless you have a very chatty APS, maybe.

14:38.270 --> 14:38.930
Right.

14:38.930 --> 14:42.620
Then you need to take a look at the congestion control again.

14:42.620 --> 14:48.920
If you have Chadi APS, I would put them in their own subnet and put a switches so that they don't cross

14:48.920 --> 14:49.670
routers.

14:49.940 --> 14:50.240
Right.

14:50.240 --> 14:51.560
And only go to the router.

14:51.560 --> 14:52.250
Absolutely.

14:52.250 --> 14:53.870
If you need to talk between subnets.

14:53.870 --> 14:54.320
Right.

14:54.860 --> 14:58.880
Otherwise, take the hit and dot directly.

14:59.270 --> 15:01.800
All right, guys, let's jump to the next topic.

15:01.820 --> 15:03.590
Network address translation.
