WEBVTT

00:00.360 --> 00:02.880
Coast to coast communication.

00:02.880 --> 00:04.710
How messages are sent between hosts.

00:06.740 --> 00:12.110
I struggled with naming in this lecture, but I found it very critical to add just because we knew we

00:12.110 --> 00:16.850
need to talk about just how to host are talking to each other at the lowest level.

00:17.150 --> 00:22.580
You know, and this is what really you need to to understand that we're going to talk about not open

00:22.580 --> 00:23.870
windows than what else is.

00:24.440 --> 00:27.260
This is layer two concepts.

00:27.590 --> 00:32.210
Most of this stuff really and layer three, sometimes we need to send a message from host to host.

00:32.210 --> 00:33.290
B What do we really need?

00:33.500 --> 00:35.720
Usually this is a request to do something on Hornsby.

00:35.720 --> 00:37.280
Hey, I'm sending an RBC call.

00:37.730 --> 00:41.240
Hey, B, do my work for me, please.

00:41.730 --> 00:41.980
Right.

00:42.590 --> 00:49.050
Each host has a network card with a unique media access control or called a mac address.

00:49.050 --> 00:52.340
So if you ever heard about this, you can check your MAC address right now.

00:52.580 --> 00:53.900
Go to your network properties.

00:54.320 --> 00:56.960
You must have a network address.

00:57.020 --> 01:02.030
You know, if you have a VM, a virtual Mac address is created for you, you can create that.

01:02.030 --> 01:05.180
But those this is this is how it looks like effectively.

01:05.180 --> 01:06.620
This is a mac address.

01:06.800 --> 01:07.820
This is one Mac address.

01:07.830 --> 01:09.110
This is another Mac address.

01:09.110 --> 01:09.380
Right.

01:09.650 --> 01:14.870
And they are what, the lowest level of communication.

01:16.090 --> 01:22.750
Of discussion, you know, of these these are the lowest level of communication that it needs to happen

01:23.020 --> 01:31.120
regularly, you know, so if are able to send a message to be so B, C, D is the MAC addresses, I

01:31.120 --> 01:33.360
just simplify them here for simplicity.

01:33.370 --> 01:35.910
Just wanted to make sure that it clean and clean.

01:35.920 --> 01:40.420
You know, I don't want to add the whole, you know, whatever number of bytes here, but l want to

01:40.420 --> 01:43.780
send a message to B and this is the, the, this is the network we have.

01:44.170 --> 01:49.030
Literally everyone is connected to each other, the mesh network, as they call it.

01:49.480 --> 01:55.570
So everyone on the network will get the message, but only B will actually accept that message.

01:56.260 --> 01:56.490
Why?

01:56.590 --> 02:02.290
Because, you see, when I send, I have no idea where to send the data here.

02:02.290 --> 02:05.230
This is this is a analytical homework, almost like a broadcast.

02:05.230 --> 02:06.280
Hey, the send message.

02:07.000 --> 02:10.690
Whoever have this Mac address, please get my message.

02:11.620 --> 02:18.280
But is the thing we have to go up to layer two here to look at the Mac address and compare it to mine.

02:18.310 --> 02:28.360
So everyone, hey, b c DNA will get this frame of data name and then we'll look at it says okay is

02:29.260 --> 02:35.980
this is destined to be I am c drop this is destined to be I am d drop.

02:36.340 --> 02:43.300
No, this is destined to be I am b take it and send that frame to the higher levels the layer.

02:43.300 --> 02:47.440
So layer three, layer four eventually going to get it, all of it if necessary, you know.

02:48.340 --> 02:54.260
So that's very critical if you are in this configuration, which is a very wastage, if you think about

02:54.260 --> 02:54.310
it.

02:54.880 --> 02:59.620
And not only wasting is actually security wise is dangerous.

02:59.620 --> 02:59.860
Right.

03:00.070 --> 03:05.680
That's how what happened in Wi-Fi public Wi-Fi connection when you send packets, right.

03:05.710 --> 03:12.580
Everyone in the Wi-Fi because Wi-Fi is a mesh like everyone is connected device is not so like it's

03:12.580 --> 03:18.520
a wired right knows like I'm connected to this machine and this machine connected to this you know I

03:18.520 --> 03:25.990
only connected to this no Wi-Fi as everyone everyone will get the Mac address as that's how people and

03:25.990 --> 03:28.840
public Wi-Fi sniff passwords back in the day.

03:28.960 --> 03:30.100
It doesn't happen anymore.

03:30.100 --> 03:38.620
But if you have a sniffer that just gets the Mac address but doesn't really drop it because hey, I

03:39.040 --> 03:43.540
yeah, this is not for me, but I wanted I want this beautiful frame.

03:43.900 --> 03:45.190
Give it to me.

03:45.580 --> 03:46.630
Give me that frame.

03:46.630 --> 03:47.350
I need it.

03:48.280 --> 03:50.950
So that's how sniffing networks, nothing is happening.

03:51.580 --> 03:53.200
As long as the data passes through you.

03:54.460 --> 03:56.140
So imagine millions of machines.

03:56.140 --> 03:57.250
Can you get in with each other?

03:57.250 --> 03:57.760
How?

03:57.760 --> 04:00.070
How do we effectively scale?

04:00.220 --> 04:02.300
We cannot just send the data to everyone.

04:02.300 --> 04:08.050
No, we need we need to eliminate the need to send the data to everyone.

04:08.710 --> 04:10.060
The address need to get better.

04:10.330 --> 04:12.070
These mechanisms are just random.

04:12.430 --> 04:16.990
You know, they don't have information that tells me.

04:18.630 --> 04:23.310
Information that tells me where to send it and we're not to send it.

04:24.270 --> 04:26.430
We need relatability.

04:26.440 --> 04:28.950
I don't know if that a word I, I just used it.

04:28.950 --> 04:35.310
So I'm sorry if it's not a word, but we need to out meet the IP address.

04:37.100 --> 04:38.960
That's why we invent things, guys.

04:39.230 --> 04:43.430
We only invent things when we absolutely need it.

04:44.210 --> 04:44.630
Right?

04:44.870 --> 04:47.470
I even spoke in a British accent just to understand it.

04:47.480 --> 04:47.780
Right.

04:48.320 --> 04:50.810
We absolutely need it.

04:51.110 --> 04:56.480
We need this IP address because there is a problem with MAC addresses.

04:56.670 --> 05:00.620
You know, a lot of people say, hey, Mac, aliases are supposed to be global.

05:00.770 --> 05:02.870
Why do we need IP addresses?

05:03.200 --> 05:11.030
My Mac, my iPhone, my fridge has a unique global Mac address.

05:11.360 --> 05:14.060
They will no two machines will have the same device.

05:14.270 --> 05:15.770
Why do we need another address?

05:16.100 --> 05:17.720
Why complicate our life?

05:18.200 --> 05:18.780
We do.

05:19.460 --> 05:21.110
Because of this Barbie relatability.

05:21.110 --> 05:21.920
We cannot rout.

05:22.760 --> 05:26.660
Hey, let's say, okay, if you will give me your Mac address and I'm going to send you a message.

05:26.660 --> 05:28.420
You to close the globe there.

05:28.430 --> 05:33.180
Absolutely no way you're going to get it, because how do I know you get it?

05:33.200 --> 05:35.780
You would need to scan the entire network to find it.

05:35.990 --> 05:40.010
It's literally the same thing I talk about in my database cause, you know, it's just like a scanning

05:40.010 --> 05:40.130
it.

05:40.130 --> 05:46.970
Whole entire table is slower than using an index, you know, to narrow that path.

05:47.570 --> 05:48.440
And that's what we need to do.

05:48.440 --> 05:52.790
We need to slash the number of machines that we need to scan.

05:55.450 --> 05:57.500
And that's why we have an IP address.

05:57.520 --> 05:58.630
The host to host communication.

05:58.630 --> 06:04.060
I built this lecture just because I want to explain the concept of mach an IP address and why we need

06:04.060 --> 06:04.210
to.

06:04.210 --> 06:04.840
Because of IP.

06:04.990 --> 06:09.730
Because I'm not going to explain this again or this is very critical to understand and I want to take

06:09.730 --> 06:10.930
it for it.

06:10.990 --> 06:13.900
Just grab the concept and then run with it.

06:14.290 --> 06:15.820
The IP address has two parts.

06:16.570 --> 06:20.710
The first part is and divide the network and then the second one to define the host.

06:20.950 --> 06:27.100
So it's really while this it's this much bytes, I believe it's four bytes.

06:27.520 --> 06:28.270
It's four bytes.

06:28.270 --> 06:29.350
Yeah, four bytes.

06:29.980 --> 06:37.080
But it describes the entire, you know, sets of 4 billion devices.

06:37.540 --> 06:38.500
But how does it do it?

06:38.500 --> 06:45.730
You know, we don't really scatter 4 billion devices when we send an IP packet, we use the network

06:45.730 --> 06:48.040
portion to eliminate many, many network.

06:48.370 --> 06:53.980
So I only send this packet to the network that is destined.

06:53.980 --> 06:58.990
And then that network we we effectively only have this many hosts.

06:59.140 --> 07:04.600
I'm going to explain that the host path is used to find the host and still we still need the MAC addresses.

07:04.600 --> 07:11.530
There is no escape there because at that low level in that private network, we need MAC addresses to

07:12.070 --> 07:13.570
just deliver that frame it.

07:13.870 --> 07:15.880
Now that we're local, send it.

07:17.320 --> 07:19.180
So here's an example.

07:19.540 --> 07:27.820
We have ABC here and I use the same name here just to confuse you for more host on network n and then

07:27.970 --> 07:31.060
wants to talk to host B on network in two.

07:31.060 --> 07:34.030
So this is not work in two and this is in one.

07:34.270 --> 07:36.100
I used this abstraction.

07:36.100 --> 07:38.110
We're going to become a little bit clearer now.

07:38.410 --> 07:40.060
But this is a network, right?

07:40.180 --> 07:45.550
And there is a router that allows them to network together.

07:45.970 --> 07:46.270
Right.

07:46.420 --> 07:47.830
Raster is a layer three protocol.

07:47.830 --> 07:53.290
So it needs to see the IP packet to look at the addresses in order to allow.

07:54.610 --> 07:58.330
So A-one, two told me this is how it's done, right?

07:58.570 --> 08:03.670
Those two A's and the browser and then the router will send them back it to be.

08:03.860 --> 08:04.120
Right.

08:05.110 --> 08:09.220
So here is the IP address, the IP addresses for.

08:10.550 --> 08:11.180
Four bites?

08:11.210 --> 08:16.970
No, a part of it is the network, and part of it is actually the.

08:18.880 --> 08:19.410
The host.

08:19.420 --> 08:19.710
Right.

08:19.860 --> 08:25.290
I'm going to explain how is this actually effectively as is specified in a minute.

08:25.680 --> 08:29.010
But for example, 192168123.

08:29.190 --> 08:31.470
This is 192168812.

08:31.740 --> 08:35.010
And this is 19268121.

08:35.760 --> 08:37.940
And these are different network.

08:37.950 --> 08:39.740
192.168.2.

08:40.110 --> 08:40.650
See that?

08:40.920 --> 08:44.220
192.16.1 is the shared between this network.

08:44.460 --> 08:45.540
This is the network section.

08:45.900 --> 08:46.440
Why?

08:46.800 --> 08:47.870
Why did you look, Jose?

08:47.880 --> 08:49.280
And why did you look at the first three by?

08:49.280 --> 08:50.370
Why not the first two?

08:50.670 --> 08:55.620
Well, because we told you that this is the network.

08:56.040 --> 08:59.190
The first 24 bit is the network slash 24.

08:59.220 --> 09:02.400
You know, there are other stuff like class AA, class B.

09:03.030 --> 09:04.710
Personally, I don't.

09:05.250 --> 09:07.530
I never seen them used.

09:07.800 --> 09:08.130
Right.

09:08.280 --> 09:12.030
The class eight, class B, class C, you know, this is the future.

09:12.030 --> 09:13.470
No, the classless thing.

09:13.500 --> 09:15.360
That's why I don't want to explain things that.

09:16.310 --> 09:21.290
You're not going to mention in reality, it's as theoretical at the end of the day.

09:21.560 --> 09:25.160
Previously this was Class A, this was class B, class C.

09:25.310 --> 09:32.000
Then they noticed that they made a mistake because, oh, it's really a waste of, you know bytes IP

09:32.390 --> 09:39.200
to use class and Cosby class C so they move to this classless thing, which is basically let me know

09:39.200 --> 09:45.650
how many bits is your network because you can use one bit for your network or up to 31, you know,

09:45.830 --> 09:46.660
because we have a.

09:47.720 --> 09:49.270
For 8 minutes.

09:49.280 --> 09:49.520
Right.

09:50.330 --> 09:52.870
So now we have the network and this is the network.

09:52.910 --> 09:53.870
So that's 94, right?

09:54.200 --> 09:56.720
So this is the shared part.

09:57.290 --> 09:58.700
If this part is different.

09:59.960 --> 10:02.060
That means you are on a different network, Poppy.

10:03.290 --> 10:08.960
So now 192168123 wants to talk to 192.168.222.

10:09.470 --> 10:10.730
These are different networks.

10:11.270 --> 10:12.560
How do you know this from network?

10:12.770 --> 10:13.310
Simple.

10:13.730 --> 10:15.470
There's something called the subnet mask.

10:15.480 --> 10:18.920
You apply that, which is basically this slash 24.

10:19.220 --> 10:22.820
And if you get a different number, that means you are not in the same network.

10:23.030 --> 10:26.210
If you get the same number, if you get the same network, you're on the same network.

10:26.510 --> 10:27.260
If you are not.

10:27.860 --> 10:29.430
Then you say all bets are off.

10:29.450 --> 10:35.360
Send it to the net to the router, which is your gateway, and that gateway will take care of routing

10:35.360 --> 10:36.260
it to somewhere else.

10:36.470 --> 10:39.980
So it changes things in the process.

10:40.420 --> 10:42.050
There's a reason I do think about.

10:42.860 --> 10:44.300
So, yeah, so that's how it's done.

10:44.810 --> 10:46.970
You're out from one network to another network.

10:47.330 --> 10:48.410
This is a pause.

10:49.340 --> 10:53.330
If you don't have this logic, then you have to send it here as it is here.

10:53.450 --> 10:55.580
And then to here and then to here as it is here.

10:55.600 --> 11:00.080
So you have to scan six machines just to find that.

11:00.080 --> 11:00.270
No.

11:00.350 --> 11:05.000
But here you immediately know, because this writer knows exactly where this machine is.

11:05.180 --> 11:06.710
It will send it immediately to it.

11:08.930 --> 11:12.080
But my host have many apps.

11:14.530 --> 11:16.510
It's not enough just to address the host.

11:16.600 --> 11:16.780
Right.

11:16.820 --> 11:17.290
Because now.

11:17.290 --> 11:20.170
Yeah, you send me a a packet.

11:20.290 --> 11:21.460
What do I do with that?

11:22.150 --> 11:24.850
Don't I have many applications?

11:25.390 --> 11:25.750
My.

11:25.900 --> 11:28.300
My machine's not really running one thing.

11:28.410 --> 11:30.220
No, it has all sorts of things.

11:30.610 --> 11:36.010
So we need another fine grained level control beside the IP address.

11:38.290 --> 11:46.590
You can send a request on Port 82 right on the same machine and the DNS request on Port 53 and says

11:46.640 --> 11:50.050
this request on Port 22, all running on the same server.

11:50.920 --> 11:52.750
How does this happen?

11:53.260 --> 11:55.210
Ports is what?

11:56.470 --> 11:56.830
What?

11:57.940 --> 11:58.870
What do we use here?

11:59.260 --> 12:02.990
We use ports in addition to the IP address to know.

12:03.010 --> 12:03.280
Okay.

12:03.280 --> 12:03.580
Yeah.

12:04.860 --> 12:09.870
The Rather did a job deliver the packet to me as a host.

12:09.870 --> 12:11.070
But I.

12:12.460 --> 12:16.540
Need to know where do you want to go, which process?

12:16.540 --> 12:23.590
I have thousands of processes and that the port, the destination port and the source port is also important

12:23.890 --> 12:26.740
to understand where exactly you need to go.

12:26.950 --> 12:29.110
So host the host communication summary.

12:29.110 --> 12:33.400
I really out of this lecture to talk about the IP address, why do we need it?

12:33.730 --> 12:39.130
Talk about Mac addresses and then the problem with Mac addresses and why would we introduced IP addresses

12:39.370 --> 12:41.350
and then talk about the needing of the ports.

12:41.530 --> 12:47.230
And I talk about really we added a flavor of adding that, talking about the concept of networks which

12:47.230 --> 12:52.390
we will explain in detail in the future, but talking about different networking, you know, how what

12:52.390 --> 12:55.030
does it mean to send one packet to another network?

12:55.210 --> 12:57.670
What does it mean to send a packet to the same network?

12:57.970 --> 13:01.110
All of that that will be will be demystified.

13:01.120 --> 13:07.810
But I just wanted to kind of tease up our guys to introduce this concept, just to have an overview,

13:07.810 --> 13:12.820
because this is kind of a fundamental really and understanding as in my opinion.

13:13.120 --> 13:15.490
And finally, we really need the idea of ports.

13:15.920 --> 13:19.720
I am you noticed that everything in this guide, I say, why do we need something?

13:19.720 --> 13:26.620
And I just why, you know, and this is the only reason I'm doing this and it maybe a little bit annoying.

13:26.620 --> 13:31.870
I'm sorry, but the reason I'm doing is because I personally ran into these questions before, you know,

13:31.870 --> 13:32.860
I was frustrated.

13:32.860 --> 13:35.950
Okay, why do any ports why do you need IP addresses?

13:36.160 --> 13:37.690
Why do we need a network?

13:38.320 --> 13:39.400
All of these questions.

13:39.790 --> 13:49.780
I try to frame them in a way so that I have an answer that will reveal and demystify things like let

13:49.780 --> 13:51.310
me know if this is this helps or not.

13:51.310 --> 13:54.070
But yeah, four ports are also another concept.

13:54.070 --> 13:59.020
So host to host communication really critical to understand these basic.

13:59.890 --> 14:01.000
Building blocks, you know.

14:01.600 --> 14:06.520
IP address, MAC address, network host and port.

14:06.820 --> 14:08.350
You know, simple things.

14:08.590 --> 14:10.360
You deal with them on a daily basis.

14:10.360 --> 14:15.430
Viewer back in engineering network engine you know even the front end user you send port request or

14:15.430 --> 14:19.650
request to port all the time but and you specify the IP address as well.

14:19.660 --> 14:19.930
Right?

14:20.320 --> 14:25.480
I wish I added another slide to talk about localhost, but it's kind of clear I localizes the IP address

14:25.480 --> 14:27.010
that is loopback.

14:27.160 --> 14:28.750
You know, never leaves the machine.

14:28.780 --> 14:31.660
You're talking to the same IP address.

14:31.660 --> 14:33.130
127001.

14:33.130 --> 14:37.510
No, that's the IPV four and call in one k so IPV six.

14:37.510 --> 14:45.190
But we're talking about the same machine that we, when we listen on a server DB server locally and

14:45.190 --> 14:49.830
send a request, nobody else can talk to this machine because we listened on local horse ram.

14:49.840 --> 14:53.230
That's another constant ad and in addition, in the summary.

14:53.830 --> 14:54.100
All right.

14:54.100 --> 14:54.970
Thank you so much.

14:55.270 --> 14:56.590
Let's jump to the next lecture.
