WEBVTT

00:00.240 --> 00:04.970
All right, meet our addressed resolution protocol.

00:04.980 --> 00:12.270
Although this is not entirely an IP protocol, it is used to identify one of the IP.

00:13.790 --> 00:15.650
Information, which is the IP address.

00:15.830 --> 00:20.070
Now, we talked about what a mac address is.

00:20.090 --> 00:21.320
One, an IP addresses.

00:21.680 --> 00:24.010
We talked about why do we have MAC addresses?

00:24.020 --> 00:24.650
We need them.

00:25.040 --> 00:27.830
We also talk about IO, which is we have MAC addresses.

00:27.830 --> 00:28.510
They are global.

00:28.520 --> 00:29.990
Why do we always use it?

00:29.990 --> 00:33.730
We can't the fortunately otherwise we'll be scanning the whole internet all the time.

00:34.100 --> 00:36.230
We need a way to index.

00:36.500 --> 00:41.150
We need a way to rout and eliminate half of the networks that we're scanning.

00:41.150 --> 00:43.730
We only need to go immediately to the thing we want.

00:44.180 --> 00:45.410
So that's why we need the IP address.

00:45.410 --> 00:45.920
But guess what?

00:46.520 --> 00:50.660
What if you know the IP is but you don't know the Mac, which is most of the situation, right?

00:50.990 --> 00:51.420
Why?

00:51.440 --> 00:55.040
Because most of the time, you know, users are doing what?

00:55.450 --> 00:57.620
Users know the address.

00:58.430 --> 01:04.460
People not don't memorize IP addresses, you know, and if you know the hostname, we use DNS to get

01:04.460 --> 01:05.210
the IP address.

01:05.210 --> 01:09.950
And if you know the IP address, you never almost never memorized the Mac.

01:10.220 --> 01:17.870
So in a way, to map the IP address down to a mac address, that's why we need to ARP because we almost

01:17.870 --> 01:23.870
always know the IP, but we never know the Mac because nobody memorize the Mac, right?

01:24.530 --> 01:26.090
And that's basically the goal here.

01:26.600 --> 01:29.000
ARP Address resolution protocol.

01:29.330 --> 01:32.230
I'm going to disappear in a minute here because there is not a this.

01:32.240 --> 01:36.050
The slides are a little bit crammed, the address resolution protocol.

01:36.650 --> 01:42.170
So we need the MAC address to send frames talked about this right frames layer two concept.

01:43.310 --> 01:46.460
Most of the time we know the IP address, but not the Mac.

01:47.030 --> 01:52.700
Our table is a cached representation that maps IP addresses to MAC mapping.

01:53.030 --> 01:53.780
That's what it is.

01:54.020 --> 01:57.080
That's called the our table right pose.

01:57.080 --> 01:58.460
Like how do you build it?

02:00.140 --> 02:01.640
So let's go through example.

02:01.760 --> 02:09.950
Here's a network who was both guys out in the same network and they want to send I guess a get request

02:09.950 --> 02:12.080
to port A380 I SDB here.

02:12.290 --> 02:18.650
So TCP so IP in this case, so frame has to be placed, right?

02:19.160 --> 02:21.540
So the IP address is ten 002.

02:21.860 --> 02:25.610
This is the large Mac address and this is its MAC address.

02:25.730 --> 02:29.080
So 3307 So we send target request.

02:29.660 --> 02:31.400
The destination port is 88.

02:31.460 --> 02:33.680
So that's part of the segment, layer four.

02:34.100 --> 02:38.270
So this is app, this is the application destination is 88.

02:39.680 --> 02:43.100
The IP layer three is ten 003.

02:43.100 --> 02:49.700
That's what I want to send to was the source while under port so we can know how to send back the packets

02:49.700 --> 02:50.480
to the application.

02:50.480 --> 02:56.240
231 to I talk about that and the TCP section or the YouTube section as well.

02:56.650 --> 02:59.720
Source ten 002 But guess what?

03:00.050 --> 03:03.050
This is not enough because this is layer three.

03:03.680 --> 03:05.090
How do you actually send it?

03:05.600 --> 03:08.750
So switches can understand how to root out.

03:08.750 --> 03:09.710
Is the wrong word here.

03:10.010 --> 03:14.030
How to switch packets, how to switch frames.

03:15.200 --> 03:18.080
So now we put the destination 33.

03:18.890 --> 03:21.170
This is the destination, Mac, the source.

03:21.170 --> 03:24.860
Mac is all seven and that's how we send it.

03:25.820 --> 03:27.050
So this is the short format.

03:27.080 --> 03:34.030
Now if you CBB that means this guy is, this is the B and this is a is just for simplicity.

03:34.040 --> 03:41.210
So I took the first two digits here and this is three means ten 003 and two is mean two.

03:41.210 --> 03:41.540
Right.

03:41.870 --> 03:46.880
And it's much easier instead of dealing with whole thing and I remove the port.

03:46.880 --> 03:48.890
This is relevant here.

03:49.370 --> 03:52.340
So this is a simplified view of what we're about to send here.

03:53.090 --> 03:53.870
We want to send.

03:55.390 --> 03:55.750
Right.

03:57.190 --> 04:00.730
This guy want to send a get request.

04:02.040 --> 04:06.990
Which is will end up as a TCP segment, which will end up as an IP backup, which will end up as a frame

04:07.710 --> 04:09.210
one to send it to home to five.

04:09.240 --> 04:09.900
What is five?

04:10.940 --> 04:11.450
This guy.

04:12.650 --> 04:13.250
But guess what?

04:14.540 --> 04:19.520
I don't know that the Mac either is a five because I never talked to them because this is the our table

04:19.790 --> 04:20.390
today.

04:21.110 --> 04:25.670
Me as a AA I only know myself and this is my Mac address.

04:25.670 --> 04:30.950
It's a so I'm going to put that as a source, but I have no idea what's the destination.

04:31.430 --> 04:32.600
I know the IP address.

04:32.600 --> 04:43.610
I know because I did a DNS on this guys in 005 and I got, I got the, I got the IP address in 005 now,

04:44.120 --> 04:45.190
but I don't know that, Mac.

04:45.200 --> 04:45.920
How do I know that?

04:46.850 --> 04:48.560
Well, what do you do is.

04:48.770 --> 04:53.720
Well, this is the same thing we just talk about host two chicks if host five is within its subnet.

04:54.650 --> 04:56.690
This is very, very important concept.

04:56.720 --> 04:57.980
We always talk about this, right?

04:58.370 --> 05:01.370
So hosts do want to send to host five, right.

05:03.210 --> 05:03.570
But.

05:05.130 --> 05:06.510
Is it in the same subnet?

05:06.870 --> 05:07.590
Yes, it is.

05:07.710 --> 05:08.190
Why?

05:08.880 --> 05:11.790
Because it applies the subnet mask.

05:12.210 --> 05:12.540
Right.

05:12.810 --> 05:14.700
And it knows that isn't the same number on it.

05:15.270 --> 05:17.310
And if it if it is in the same subnet.

05:17.310 --> 05:22.590
So that means it can directly inserts the Mac address of that device.

05:22.890 --> 05:24.090
Because it's the same subnet.

05:24.090 --> 05:26.850
So it know it can know the Mac address.

05:26.850 --> 05:28.620
So it means that Mac address was five.

05:29.850 --> 05:31.170
So now host two checks.

05:31.170 --> 05:32.040
It's our table.

05:32.820 --> 05:37.170
Do I did I ever visited host life ever at all?

05:37.320 --> 05:38.730
Do I have the Mac address of five?

05:39.150 --> 05:39.450
Hmm.

05:40.020 --> 05:40.560
Never.

05:40.980 --> 05:41.310
Right.

05:41.580 --> 05:47.930
So what happens here is host two will send an all request broadcast to all machines on the network,

05:47.960 --> 05:58.260
says, hey, who has, uh, this the who has was the Mac address of IP office is ten 005.

05:58.260 --> 05:59.220
Everybody gets it.

05:59.610 --> 06:01.160
So this guy gets this guy's office.

06:01.380 --> 06:02.220
This guy gets it.

06:02.250 --> 06:04.110
Everybody who has the IP address.

06:04.130 --> 06:04.920
Ten 005.

06:05.460 --> 06:06.510
So host five replies.

06:06.510 --> 06:07.230
Okay, it's me.

06:07.230 --> 06:07.890
It's Didi.

06:08.790 --> 06:14.190
So immediately it updates it stable and then inserts that as its destination mac address.

06:14.190 --> 06:15.420
So it does an arbitrary.

06:15.950 --> 06:19.080
So the next one to want to talk to five.

06:19.410 --> 06:22.470
It doesn't need to do that auto broadcast anymore.

06:22.920 --> 06:23.340
Why?

06:23.670 --> 06:26.130
Because it has a cache in a stable.

06:26.160 --> 06:26.760
Beautiful.

06:29.020 --> 06:30.520
Banana spice things up a little bit.

06:30.890 --> 06:34.810
E Which is to want to talk to x one, two, three, four.

06:34.960 --> 06:39.100
It's a completely different server in the other side of the world.

06:39.730 --> 06:41.830
Well, what do we do?

06:43.570 --> 06:47.290
Well, the question is, are you on my subnet?

06:47.560 --> 06:48.310
Always.

06:48.310 --> 06:49.690
It is always the same question.

06:50.050 --> 06:51.400
Are you and my subnet?

06:51.400 --> 06:53.920
One, two, three, four applies the subnet mask.

06:54.370 --> 06:56.590
And definitely I'm not going to get the same network.

06:56.590 --> 06:57.010
Right.

06:57.910 --> 07:00.190
And as a result, it's not not on my subnet.

07:00.190 --> 07:00.880
So what do I do?

07:01.870 --> 07:02.380
Guess what?

07:03.340 --> 07:04.870
We need to talk to the gateway.

07:06.180 --> 07:07.200
We talked about this, right?

07:07.620 --> 07:08.580
If I don't know.

07:09.510 --> 07:09.990
Uh.

07:11.150 --> 07:12.770
If I if it's not on my network.

07:12.770 --> 07:15.590
So I need to send it to someone who might know.

07:15.590 --> 07:16.670
And my gateway will.

07:17.090 --> 07:18.380
Sure does.

07:18.620 --> 07:21.600
If even if my gateway doesn't know my.

07:21.830 --> 07:23.030
It will know someone who does.

07:23.480 --> 07:27.260
So that's that's the goal of the of this routing that we talked about.

07:27.260 --> 07:27.500
Right.

07:27.860 --> 07:28.450
But guess what?

07:28.460 --> 07:28.730
Now?

07:29.090 --> 07:33.520
If I want to talk to the Gateway, I need the Mac address of the Gateway.

07:33.590 --> 07:36.710
Now, as if you're sending a local message to your gateway.

07:36.770 --> 07:38.420
It's just another host to this point.

07:38.840 --> 07:39.560
We need to get this.

07:39.770 --> 07:42.740
If how will we doing, ARP?

07:43.610 --> 07:44.480
How do we do on up?

07:44.990 --> 07:45.320
Right.

07:45.350 --> 07:46.760
We do an op, we check the table.

07:46.760 --> 07:47.420
It's not there.

07:47.420 --> 07:49.600
So we're going to send to everybody.

07:49.610 --> 07:52.670
It's like, all right, who has the IP address?

07:52.670 --> 07:53.780
Ten 001.

07:53.990 --> 07:54.260
Right.

07:54.260 --> 07:55.370
Because that's my gateway.

07:55.370 --> 07:58.820
And how you might say how did it how did you know ten 001 as a gateway.

07:59.090 --> 08:01.340
It's baked into your machine itself.

08:01.760 --> 08:05.360
If you go now to your device, you'll find the gateway IP address.

08:05.570 --> 08:06.170
It's there.

08:07.010 --> 08:12.830
So now you get there, you can send an art request immediately, and then it'll ask a question.

08:12.830 --> 08:14.060
Who has ten zeros?

08:14.060 --> 08:21.170
You want a very dangerous question, because if you send that question, everybody will get it.

08:21.170 --> 08:27.470
And someone can fake that answer, says, Hey, I am I do have that gateway.

08:27.740 --> 08:34.210
I own ten 001 and machine four can reply with CC before that.

08:34.510 --> 08:36.230
And if it does, what happens?

08:36.440 --> 08:41.810
All the packets, all the frames that actually goes through this machine is that if the rather bad things

08:41.810 --> 08:46.880
happen because now you just passed all your traffic to a to I know that might be the attacker.

08:46.970 --> 08:48.740
This is called ARP poisoning.

08:50.540 --> 08:56.600
So in this case, in the benign case, gateway, it applies with F.F., right?

08:56.690 --> 08:58.040
Hey, this is my Mac address.

08:58.040 --> 08:59.930
And then we're going to put it right here.

09:00.170 --> 09:01.690
And this is where Nath kicks in.

09:01.760 --> 09:07.880
We're going to talk about Nat, and it's just a translation because it's not really an now to send a

09:07.880 --> 09:13.040
packet with a source as ten zero zero to this guy will never know how to write it back.

09:13.430 --> 09:19.010
We need to replace the external IP address and do a lot of magic that we're going to talk about in a

09:19.010 --> 09:19.550
future.

09:20.060 --> 09:23.210
So, Sarma, somebody.

09:24.430 --> 09:24.940
Summary.

09:25.720 --> 09:27.970
So all stands for addressed resolution protocol.

09:28.000 --> 09:30.220
We need the MAC address to send frames between machines.

09:30.940 --> 09:31.210
Right.

09:31.390 --> 09:32.240
That kind of makes sense.

09:32.240 --> 09:32.380
Right?

09:32.460 --> 09:36.910
Especially in a local network, even if you're talking to somewhere outside.

09:37.180 --> 09:37.510
Right.

09:37.660 --> 09:45.220
We still need to send frames to a gateway so that the gateway can talk to the outside world.

09:45.700 --> 09:48.460
And as a result, you need to know the Mac address of the gateway.

09:48.700 --> 09:53.890
So Mac addresses are very critical to understand because we only know the IP addresses and we need to

09:53.890 --> 09:55.560
make addresses and that's up.

09:56.880 --> 09:58.950
Almost always we have the openers but not the mac.

09:59.250 --> 10:02.430
Need a lookup protocol that gives us the mack from the IPL.

10:02.430 --> 10:05.620
US attacks can be performed on ARB gold.

10:05.620 --> 10:06.630
They are poisoning.

10:06.990 --> 10:14.250
And the problem here is people can fake the gateway by sending broadcast messages that hey, this is

10:14.250 --> 10:18.510
my Mac address and I am going to pretend to be ten 001 right?

10:18.630 --> 10:23.280
This is only done when you're writing custom software that bypasses the network stack.

10:23.280 --> 10:25.350
Obviously this is the kind of advanced stuff.

10:26.280 --> 10:28.080
Probably there are tools that does all that stuff.

10:28.080 --> 10:34.860
But this is also always very critical to understand, especially when for backing engineer for us,

10:34.980 --> 10:36.570
we don't need to see this page anymore.

10:36.810 --> 10:37.770
Come back.

10:37.770 --> 10:45.480
An engineer if you want to understand ARP, the R.P. Virtual Router Density Protocol.

10:45.870 --> 10:53.730
If you want to do a load balancing using a virtual IP address, ARP becomes very critical here.

10:53.730 --> 10:59.790
What do you want to you know, you want to have one IP address, but that IP address is shared between

10:59.790 --> 11:02.730
seven machines so that the IP address doesn't change.

11:02.730 --> 11:09.000
But every time you connect that the machine, if this machine goes down automatically, the IP address

11:09.000 --> 11:14.520
doesn't change, but automatically another machine tries to will will be there.

11:14.610 --> 11:16.440
The traffic will send to the other machine.

11:16.470 --> 11:19.620
No very powerful stuff really.

11:19.950 --> 11:22.860
You know, and R plays a big role in this.

11:23.310 --> 11:29.840
Will we basically trick, you know, who answers the questions of a.

11:32.280 --> 11:33.090
What?

11:33.420 --> 11:34.650
What is my Mac?

11:34.680 --> 11:40.350
Effectively becomes a question that is answered by multiple machines, you know.

11:40.680 --> 11:46.500
And as a result, one machine will go, will be the offline machine and one machine will be the online.

11:46.710 --> 11:51.630
And if this goes offline, this machine is not answering our request and all of a sudden the traffic

11:51.630 --> 11:52.140
goes to it.

11:52.650 --> 11:53.570
Beautiful design.

11:53.580 --> 11:56.570
You know, there are many, many ways to do it, but this is one part of it.

11:56.640 --> 11:59.640
We're going to talk about this as well in the future.

12:00.000 --> 12:02.130
Let's move to the next lecture.
